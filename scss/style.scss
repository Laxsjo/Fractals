:root {
	font-family: monospace;
}

body {
	width: 100vw;
	height: 100vh;
	margin: 0;
	padding: 1rem;
	box-sizing: border-box;

	font-size: calc(0.68rem + 0.75vh);
}

button {
	padding-inline: 0.5rem;

	font-size: inherit;
	font-family: inherit;

	color: lightgray;

	border-radius: 0.4rem;
	border: 2px solid hsl(0 0% 45%);

	background-color: hsl(0 0% 30%);

	&:hover,
	&:focus-visible {
		background-color: hsl(0 0% 35%);
	}

	&:active {
		background-color: hsl(0 0% 25%);
	}
}

input {
	font-size: inherit;
	font-family: inherit;

	color: lightgray;

	border-radius: 0.4rem;
	border: 2px solid hsl(0 0% 55%);

	background-color: hsl(0 0% 40%);
}

.container {
	display: grid;
	position: relative;

	width: 100%;
	height: 100%;
	/* aspect-ratio: 1; */
}

canvas {
	width: 100%;
	height: 100%;
	box-sizing: border-box;

	border: 1px solid black;
}

@keyframes fadeOut {
	100% {
		opacity: 0;
	}
}

.popupButton {
	position: relative;

	.popupLabel {
		display: none;
	}

	&.popup .popupLabel {
		pointer-events: none;

		display: block;
		position: absolute;

		margin-bottom: 0.4rem;
		padding-inline: 0.2rem;
		bottom: 100%;
		left: 50%;

		color: hsl(120 100% 67%);

		border-radius: 0.4rem;
		border: 2px solid hsl(120 15% 50%);

		background-color: hsl(120 11% 27%);
		opacity: 1;

		transform: translateX(-50%);

		animation: fadeOut ease-out forwards 1s;
	}

	&.popup.warning .popupLabel {
		color: hsl(0 100% 67%);

		border: 2px solid hsl(0 15% 50%);
		background-color: hsl(0 11% 27%);
	}
}

.display {
	display: grid;
	/* flex-direction: column; */
	gap: 0.6ch;
	grid:
		auto
		auto
		auto
		/ auto auto auto 1fr;
	align-items: center;

	position: absolute;
	/* left: 0;
				top: 0; */
	align-self: end;

	margin: 0.4rem;
	padding: 0.6rem;

	font-weight: 600;
	color: white;

	border-radius: 0.6rem;

	background-color: hsl(0 0% 30% / 0.8);

	li {
		display: contents;

		button {
			justify-self: start;
		}

		& > :first-child {
			grid-column: 1;
		}
	}
	.value {
		font-size: 1.3rem;
		font-weight: 400;
	}
}

.together {
	grid-column: span 3;
}

#zoomInput {
	justify-self: start;

	grid-column: 1 span 3;
}

#resetButton {
	justify-self: end;
	grid-column: span 2;
}

#iterationInput {
	width: 100%;
	justify-self: stretch;
	max-width: 10ch;
}

.container:not(.failed) .failedDisplay {
	display: none;
}
.failedDisplay {
	display: flex;
	flex-direction: column;
	gap: 0.4rem;

	position: absolute;
	align-self: start;

	margin: 0.4rem;
	padding: 0.6rem;

	color: white;

	border-radius: 0.6rem;

	background-color: hsl(0 0% 30% / 0.8);

	.errorLabel {
		font-size: 1.5rem;
		font-weight: 700;

		color: crimson;
	}
	.errorReason {
		font-size: 1.1rem;
	}
}
